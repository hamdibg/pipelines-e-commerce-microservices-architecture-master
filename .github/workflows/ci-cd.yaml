name: CI/CD Pipeline

on:
  push:
    branches:
      - pipelines

jobs:
  api-gateway:
    name: Build & Push api-gateway
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test api-gateway
        run: ./mvnw clean package -DskipTests=false -pl api-gateway -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/api-gateway:latest api-gateway
          docker push $DOCKERHUB_USERNAME/api-gateway:latest

  order:
    name: Build & Push order
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test order
        run: ./mvnw clean package -DskipTests=false -pl order -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/order:latest order
          docker push $DOCKERHUB_USERNAME/order:latest

  payment:
    name: Build & Push payment
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test payment
        run: ./mvnw clean package -DskipTests=false -pl payment -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/payment:latest payment
          docker push $DOCKERHUB_USERNAME/payment:latest

  products:
    name: Build & Push products
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test products
        run: ./mvnw clean package -DskipTests=false -pl products -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/products:latest products
          docker push $DOCKERHUB_USERNAME/products:latest

  users:
    name: Build & Push users
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test users
        run: ./mvnw clean package -DskipTests=false -pl users -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/users:latest users
          docker push $DOCKERHUB_USERNAME/users:latest

  config-server:
    name: Build & Push config-server
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test config-server
        run: ./mvnw clean package -DskipTests=false -pl config-server -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/config-server:latest config-server
          docker push $DOCKERHUB_USERNAME/config-server:latest

  eureka-server:
    name: Build & Push eureka-server
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      - name: Build & Test eureka-server
        run: ./mvnw clean package -DskipTests=false -pl eureka-server -am
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build & Push Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/eureka-server:latest eureka-server
          docker push $DOCKERHUB_USERNAME/eureka-server:latest

  deploy:
    name: Deploy all microservices via Helm
    needs: [api-gateway, order, payment, products, users, config-server, eureka-server]
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
        with:
          version: 'latest'
      - uses: azure/setup-helm@v4
        with:
          version: 'latest'
      - name: Deploy via Helm
        run: |
          echo "$KUBECONFIG_DATA" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          helm upgrade --install ecommerce helm \
            --set apiGateway.image=$DOCKERHUB_USERNAME/api-gateway:latest \
            --set order.image=$DOCKERHUB_USERNAME/order:latest \
            --set payment.image=$DOCKERHUB_USERNAME/payment:latest \
            --set products.image=$DOCKERHUB_USERNAME/products:latest \
            --set users.image=$DOCKERHUB_USERNAME/users:latest \
            --set configServer.image=$DOCKERHUB_USERNAME/config-server:latest \
            --set eurekaServer.image=$DOCKERHUB_USERNAME/eureka-server:latest
