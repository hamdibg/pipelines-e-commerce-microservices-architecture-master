pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    }
    stages {
        stage('Checkout') {
            steps { checkout scm }
        }
        stage('Build & Test') {
            steps { sh './mvnw clean package -DskipTests=false' }
        }
        stage('Docker Build & Push') {
            steps {
                script {
                    sh "echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin"
                    for (svc in ['api-gateway', 'order', 'payment', 'products', 'users', 'config-server', 'eureka-server']) {
                        sh "docker build -t $DOCKERHUB_CREDENTIALS_USR/$svc:latest $svc"
                        sh "docker push $DOCKERHUB_CREDENTIALS_USR/$svc:latest"
                    }
                }
            }
        }
        stage('Helm Deploy') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh '''
                      export KUBECONFIG=$KUBECONFIG
                      helm upgrade --install ecommerce helm \
                        --set apiGateway.image=$DOCKERHUB_CREDENTIALS_USR/api-gateway:latest \
                        --set order.image=$DOCKERHUB_CREDENTIALS_USR/order:latest \
                        --set payment.image=$DOCKERHUB_CREDENTIALS_USR/payment:latest \
                        --set products.image=$DOCKERHUB_CREDENTIALS_USR/products:latest \
                        --set users.image=$DOCKERHUB_CREDENTIALS_USR/users:latest \
                        --set configServer.image=$DOCKERHUB_CREDENTIALS_USR/config-server:latest \
                        --set eurekaServer.image=$DOCKERHUB_CREDENTIALS_USR/eureka-server:latest
                    '''
                }
            }
        }
    }
}